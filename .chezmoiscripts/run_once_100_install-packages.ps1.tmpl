function Refresh-Environment
{
  $locations = 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
  'HKCU:\Environment'

  $locations | ForEach-Object {
    $k = Get-Item $_
    $k.GetValueNames() | ForEach-Object {
      $name  = $_
      $value = $k.GetValue($_)
      Set-Item -Path Env:\$name -Value $value
    }
  }

  $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
}

### Package Providers
Write-Host "Installing Package Providers..." -ForegroundColor "Yellow"
Get-PackageProvider NuGet -Force | Out-Null

### Install PowerShell Modules
Write-Host "Installing PowerShell Modules..." -ForegroundColor "Yellow"
Install-Module Posh-Git -Scope CurrentUser -Force
Install-Module PSWindowsUpdate -Scope CurrentUser -Force

# system and cli
Write-Host "Installing Git"
winget install Git.Git                                   --silent --accept-package-agreements --override "/VerySilent /NoRestart /o:PathOption=CmdTools /Components=""icons,assoc,assoc_sh,gitlfs"""
Write-Host "Installing NodeJS"
winget install OpenJS.NodeJS                             --silent --accept-package-agreements
Write-Host "Installing Python3"
winget install Python.Python.3                           --silent --accept-package-agreements

# browsers
Write-Host "Installing Firefox"
winget install Mozilla.Firefox                           --silent --accept-package-agreements

# dev tools and frameworks
Write-Host "Installing PowershellCore"
winget install Microsoft.PowerShell                      --silent --accept-package-agreements
Write-Host "Installing Neovim"
winget install Neovim.Neovim                             --silent --accept-package-agreements

# Refresh environment
Refresh-Environment

### Node Packages
Write-Host "Installing Node Packages..." -ForegroundColor "Yellow"
if (which npm)
{
  npm update npm
}
